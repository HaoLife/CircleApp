<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:android="http://uno.ui/android"
  xmlns:ctw="using:CommunityToolkit.WinUI.Controls"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:ios="http://uno.ui/ios"
  xmlns:macos="http://uno.ui/macos"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:mobile="http://uno.ui/mobile"
  xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
  xmlns:not_android="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:not_mobile="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:not_mux="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:not_win="http://uno.ui/not_win"
  xmlns:skia="http://uno.ui/skia"
  xmlns:tk="using:CommunityToolkit.WinUI"
  xmlns:um="using:CircleApp.WinUI.Controls"
  xmlns:utu="using:Uno.Toolkit.UI"
  xmlns:wasm="http://uno.ui/wasm"
  xmlns:win="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  mc:Ignorable="d not_win ios android macos wasm skia">

  <ResourceDictionary.ThemeDictionaries>

    <ResourceDictionary x:Key="Dark">

      <StaticResource x:Key="TabBarItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />

      <SolidColorBrush x:Key="TabBarItemForegroundPointerOver" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundPressed" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundDisabled" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundSelected" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundSelectedPointerOver" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundSelectedPressed" Color="Red" />

      <StaticResource x:Key="TabBarItemBorderBrush" ResourceKey="SystemControlTransparentBrush" />

    </ResourceDictionary>

    <ResourceDictionary x:Key="Light">

      <StaticResource x:Key="TabBarItemBackground" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundPressed" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundSelected" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundSelectedPointerOver" ResourceKey="SystemControlTransparentBrush" />
      <StaticResource x:Key="TabBarItemBackgroundSelectedPressed" ResourceKey="SystemControlTransparentBrush" />


      <StaticResource x:Key="TabBarItemForeground" ResourceKey="SystemControlForegroundBaseHighBrush" />
      <!--<SolidColorBrush x:Key="TabBarItemForeground" Color="Transparent" />-->
      <SolidColorBrush x:Key="TabBarItemForegroundPointerOver" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundPressed" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundDisabled" Color="#666" />
      <SolidColorBrush x:Key="TabBarItemForegroundSelected" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundSelectedPointerOver" Color="Red" />
      <SolidColorBrush x:Key="TabBarItemForegroundSelectedPressed" Color="Red" />

    </ResourceDictionary>
  </ResourceDictionary.ThemeDictionaries>
  <Style BasedOn="{StaticResource DefaultHeaderedContentControlStyle}" TargetType="ctw:HeaderedContentControl" />

  <Style x:Key="DefaultHeaderedContentControlStyle" TargetType="ctw:HeaderedContentControl">
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="VerticalContentAlignment" Value="Top" />
    <Setter Property="CornerRadius" Value="8" />
    <Setter Property="Padding" Value="10,8" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="BorderBrush" Value="#eaeaea" />
    <Setter Property="Background" Value="#f9f9f9" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ctw:HeaderedContentControl">
          <Grid
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{TemplateBinding CornerRadius}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto" />
              <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto" />
              <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <ContentPresenter
              x:Name="HeaderPresenter"
              Grid.ColumnSpan="2"
              Margin="0,0,0,10"
              x:DeferLoadStrategy="Lazy"
              Content="{TemplateBinding Header}"
              ContentTemplate="{TemplateBinding HeaderTemplate}"
              FontFamily="{StaticResource ContentControlThemeFontFamily}"
              FontWeight="Bold" />
            <ContentPresenter
              x:Name="ContentPresenter"
              Grid.Row="1"
              Grid.ColumnSpan="2"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              Content="{TemplateBinding Content}" />
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Vertical" />
                <VisualState x:Name="Horizontal">
                  <VisualState.Setters>
                    <Setter Target="HeaderPresenter.(Grid.ColumnSpan)" Value="1" />
                    <Setter Target="ContentPresenter.(Grid.ColumnSpan)" Value="1" />
                    <Setter Target="ContentPresenter.(Grid.Column)" Value="1" />
                    <Setter Target="HeaderPresenter.(Grid.Row)" Value="1" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>




  <x:Double x:Key="TabBarHeightOrWidth">52</x:Double>
  <x:Double x:Key="TabBarItemIconHeight">16</x:Double>
  <x:Double x:Key="TabBarItemIconWidth">16</x:Double>
  <x:Double x:Key="TabBarCornerRadius">8</x:Double>
  <Thickness x:Key="TabBarItemContentMargin">0,0,0,6</Thickness>
  <Thickness x:Key="TabBarItemContentOnlyMargin">12,0</Thickness>
  <Duration x:Key="TabBarIndicatorAnimationDuration">0:0:0.25</Duration>


  <Style x:Key="CustomDefaultTabBarItemStyle" TargetType="utu:TabBarItem">
    <Setter Property="Foreground" Value="{ThemeResource TabBarItemForeground}" />
    <Setter Property="Background" Value="{ThemeResource TabBarItemBackground}" />
    <Setter Property="BorderBrush" Value="{ThemeResource TabBarItemBorderBrush}" />
    <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
    <Setter Property="FontWeight" Value="Normal" />
    <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
    <Setter Property="UseSystemFocusVisuals" Value="True" />
    <Setter Property="HorizontalContentAlignment" Value="Center" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="utu:TabBarItem">
          <Grid
            x:Name="LayoutRoot"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Control.IsTemplateFocusTarget="True">
            <Rectangle x:Name="PointerRectangle" Fill="Transparent" Visibility="Collapsed" />
            <Grid x:Name="ContentGrid">
              <Grid.RowDefinitions>
                <RowDefinition x:Name="IconRow" Height="*" />
                <RowDefinition x:Name="ContentRow" Height="Auto" />
              </Grid.RowDefinitions>
              <Viewbox x:Name="IconBox" Width="{StaticResource TabBarItemIconWidth}" Height="{StaticResource TabBarItemIconHeight}">
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" />
              </Viewbox>
              <ContentPresenter
                x:Name="ContentPresenter"
                Grid.Row="1"
                Margin="{StaticResource TabBarItemContentMargin}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                AutomationProperties.AccessibilityView="Raw"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}"
                ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                ContentTransitions="{TemplateBinding ContentTransitions}"
                TextWrapping="NoWrap" />
            </Grid>

            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="PointerStates">
                <VisualState x:Name="Normal" />
                <VisualState x:Name="PointerOver">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabBarItemBackgroundPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource TabBarItemBackgroundPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TabBarItemForegroundPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabBarItemForegroundPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Pressed">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabBarItemBackgroundPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource TabBarItemBackgroundPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TabBarItemForegroundPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabBarItemForegroundPressed}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Selected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabBarItemBackgroundSelected}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource TabBarItemBackgroundSelected}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TabBarItemForegroundSelected}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabBarItemForegroundSelected}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOverSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource TabBarItemBackgroundSelectedPointerOver}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TabBarItemForegroundSelectedPointerOver}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabBarItemForegroundSelectedPointerOver}" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PressedSelected">
                  <VisualState.Setters>
                    <Setter Target="LayoutRoot.Background" Value="{ThemeResource TabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="PointerRectangle.Fill" Value="{ThemeResource TabBarItemBackgroundSelectedPressed}" />
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TabBarItemForegroundSelectedPressed}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabBarItemForegroundSelectedPressed}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DisabledStates">
                <VisualState x:Name="Enabled" />
                <VisualState x:Name="Disabled">
                  <VisualState.Setters>
                    <Setter Target="Icon.Foreground" Value="{ThemeResource TabBarItemForegroundDisabled}" />
                    <Setter Target="ContentPresenter.Foreground" Value="{ThemeResource TabBarItemForegroundDisabled}" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TabBarIconPositionStates">
                <VisualState x:Name="IconOnTop" />
                <VisualState x:Name="IconOnly">
                  <VisualState.Setters>
                    <Setter Target="PointerRectangle.Visibility" Value="Visible" />
                    <Setter Target="ContentPresenter.Visibility" Value="Collapsed" />
                  </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ContentOnly">
                  <VisualState.Setters>
                    <Setter Target="IconBox.Visibility" Value="Collapsed" />
                    <Setter Target="ContentPresenter.Margin" Value="{StaticResource TabBarItemContentOnlyMargin}" />
                    <Setter Target="IconRow.Height" Value="0" />
                    <Setter Target="ContentRow.Height" Value="*" />
                  </VisualState.Setters>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--  TabBar  -->
  <Style BasedOn="{StaticResource DefaultTabBarStyle}" TargetType="utu:TabBar">
    <Setter Property="MinHeight" Value="{StaticResource TabBarHeightOrWidth}" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource CustomDefaultTabBarItemStyle}" />
  </Style>

  <!--  TabBarItem  -->
  <Style BasedOn="{StaticResource CustomDefaultTabBarItemStyle}" TargetType="utu:TabBarItem" />


</ResourceDictionary>
